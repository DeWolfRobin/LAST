<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE nmaprun>
<?xml-stylesheet href="file:///usr/bin/../share/nmap/nmap.xsl" type="text/xsl"?>
<!-- Nmap 7.40 scan initiated Thu Nov 15 09:37:40 2018 as: nmap -Pn -&#45;script vuln -iL output/live-hosts.txt -oX output/nmapvuln.xml -->
<nmaprun scanner="nmap" args="nmap -Pn -&#45;script vuln -iL output/live-hosts.txt -oX output/nmapvuln.xml" start="1542271060" startstr="Thu Nov 15 09:37:40 2018" version="7.40" xmloutputversion="1.04">
<scaninfo type="syn" protocol="tcp" numservices="1000" services="1,3-4,6-7,9,13,17,19-26,30,32-33,37,42-43,49,53,70,79-85,88-90,99-100,106,109-111,113,119,125,135,139,143-144,146,161,163,179,199,211-212,222,254-256,259,264,280,301,306,311,340,366,389,406-407,416-417,425,427,443-445,458,464-465,481,497,500,512-515,524,541,543-545,548,554-555,563,587,593,616-617,625,631,636,646,648,666-668,683,687,691,700,705,711,714,720,722,726,749,765,777,783,787,800-801,808,843,873,880,888,898,900-903,911-912,981,987,990,992-993,995,999-1002,1007,1009-1011,1021-1100,1102,1104-1108,1110-1114,1117,1119,1121-1124,1126,1130-1132,1137-1138,1141,1145,1147-1149,1151-1152,1154,1163-1166,1169,1174-1175,1183,1185-1187,1192,1198-1199,1201,1213,1216-1218,1233-1234,1236,1244,1247-1248,1259,1271-1272,1277,1287,1296,1300-1301,1309-1311,1322,1328,1334,1352,1417,1433-1434,1443,1455,1461,1494,1500-1501,1503,1521,1524,1533,1556,1580,1583,1594,1600,1641,1658,1666,1687-1688,1700,1717-1721,1723,1755,1761,1782-1783,1801,1805,1812,1839-1840,1862-1864,1875,1900,1914,1935,1947,1971-1972,1974,1984,1998-2010,2013,2020-2022,2030,2033-2035,2038,2040-2043,2045-2049,2065,2068,2099-2100,2103,2105-2107,2111,2119,2121,2126,2135,2144,2160-2161,2170,2179,2190-2191,2196,2200,2222,2251,2260,2288,2301,2323,2366,2381-2383,2393-2394,2399,2401,2492,2500,2522,2525,2557,2601-2602,2604-2605,2607-2608,2638,2701-2702,2710,2717-2718,2725,2800,2809,2811,2869,2875,2909-2910,2920,2967-2968,2998,3000-3001,3003,3005-3007,3011,3013,3017,3030-3031,3052,3071,3077,3128,3168,3211,3221,3260-3261,3268-3269,3283,3300-3301,3306,3322-3325,3333,3351,3367,3369-3372,3389-3390,3404,3476,3493,3517,3527,3546,3551,3580,3659,3689-3690,3703,3737,3766,3784,3800-3801,3809,3814,3826-3828,3851,3869,3871,3878,3880,3889,3905,3914,3918,3920,3945,3971,3986,3995,3998,4000-4006,4045,4111,4125-4126,4129,4224,4242,4279,4321,4343,4443-4446,4449,4550,4567,4662,4848,4899-4900,4998,5000-5004,5009,5030,5033,5050-5051,5054,5060-5061,5080,5087,5100-5102,5120,5190,5200,5214,5221-5222,5225-5226,5269,5280,5298,5357,5405,5414,5431-5432,5440,5500,5510,5544,5550,5555,5560,5566,5631,5633,5666,5678-5679,5718,5730,5800-5802,5810-5811,5815,5822,5825,5850,5859,5862,5877,5900-5904,5906-5907,5910-5911,5915,5922,5925,5950,5952,5959-5963,5987-5989,5998-6007,6009,6025,6059,6100-6101,6106,6112,6123,6129,6156,6346,6389,6502,6510,6543,6547,6565-6567,6580,6646,6666-6669,6689,6692,6699,6779,6788-6789,6792,6839,6881,6901,6969,7000-7002,7004,7007,7019,7025,7070,7100,7103,7106,7200-7201,7402,7435,7443,7496,7512,7625,7627,7676,7741,7777-7778,7800,7911,7920-7921,7937-7938,7999-8002,8007-8011,8021-8022,8031,8042,8045,8080-8090,8093,8099-8100,8180-8181,8192-8194,8200,8222,8254,8290-8292,8300,8333,8383,8400,8402,8443,8500,8600,8649,8651-8652,8654,8701,8800,8873,8888,8899,8994,9000-9003,9009-9011,9040,9050,9071,9080-9081,9090-9091,9099-9103,9110-9111,9200,9207,9220,9290,9415,9418,9485,9500,9502-9503,9535,9575,9593-9595,9618,9666,9876-9878,9898,9900,9917,9929,9943-9944,9968,9998-10004,10009-10010,10012,10024-10025,10082,10180,10215,10243,10566,10616-10617,10621,10626,10628-10629,10778,11110-11111,11967,12000,12174,12265,12345,13456,13722,13782-13783,14000,14238,14441-14442,15000,15002-15004,15660,15742,16000-16001,16012,16016,16018,16080,16113,16992-16993,17877,17988,18040,18101,18988,19101,19283,19315,19350,19780,19801,19842,20000,20005,20031,20221-20222,20828,21571,22939,23502,24444,24800,25734-25735,26214,27000,27352-27353,27355-27356,27715,28201,30000,30718,30951,31038,31337,32768-32785,33354,33899,34571-34573,35500,38292,40193,40911,41511,42510,44176,44442-44443,44501,45100,48080,49152-49161,49163,49165,49167,49175-49176,49400,49999-50003,50006,50300,50389,50500,50636,50800,51103,51493,52673,52822,52848,52869,54045,54328,55055-55056,55555,55600,56737-56738,57294,57797,58080,60020,60443,61532,61900,62078,63331,64623,64680,65000,65129,65389"/>
<verbose level="0"/>
<debugging level="0"/>
<host starttime="1542271071" endtime="1542271588"><status state="up" reason="arp-response" reason_ttl="0"/>
<address addr="10.0.0.3" addrtype="ipv4"/>
<address addr="10:00:5A:CA:55:16" addrtype="mac" vendor="IBM"/>
<hostnames>
</hostnames>
<ports><extraports state="closed" count="982">
<extrareasons reason="resets" count="982"/>
</extraports>
<port protocol="tcp" portid="53"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="domain" method="table" conf="3"/></port>
<port protocol="tcp" portid="88"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="kerberos-sec" method="table" conf="3"/></port>
<port protocol="tcp" portid="135"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="msrpc" method="table" conf="3"/></port>
<port protocol="tcp" portid="139"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="netbios-ssn" method="table" conf="3"/></port>
<port protocol="tcp" portid="389"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="ldap" method="table" conf="3"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="445"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="microsoft-ds" method="table" conf="3"/></port>
<port protocol="tcp" portid="464"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="kpasswd5" method="table" conf="3"/></port>
<port protocol="tcp" portid="593"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="http-rpc-epmap" method="table" conf="3"/></port>
<port protocol="tcp" portid="636"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="ldapssl" method="table" conf="3"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="3268"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="globalcatLDAP" method="table" conf="3"/></port>
<port protocol="tcp" portid="3269"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="globalcatLDAPssl" method="table" conf="3"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="3389"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="ms-wbt-server" method="table" conf="3"/><script id="ssl-dh-params" output="&#xa;  VULNERABLE:&#xa;  Diffie-Hellman Key Exchange Insufficient Group Strength&#xa;    State: VULNERABLE&#xa;      Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;      of insufficient strength, especially those using one of a few commonly&#xa;      shared groups, may be susceptible to passive eavesdropping attacks.&#xa;    Check results:&#xa;      WEAK DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_WITH_AES_256_GCM_SHA384&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: RFC2409/Oakley Group 2&#xa;            Modulus Length: 1024&#xa;            Generator Length: 1024&#xa;            Public Key Length: 1024&#xa;    References:&#xa;      https://weakdh.org&#xa;"><table key="NMAP-20">
<elem key="title">Diffie-Hellman Key Exchange Insufficient Group Strength</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;of insufficient strength, especially those using one of a few commonly&#xa;shared groups, may be susceptible to passive eavesdropping attacks.</elem>
</table>
<table key="check_results">
<elem>WEAK DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_WITH_AES_256_GCM_SHA384&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: RFC2409/Oakley Group 2&#xa;      Modulus Length: 1024&#xa;      Generator Length: 1024&#xa;      Public Key Length: 1024</elem>
</table>
<table key="refs">
<elem>https://weakdh.org</elem>
</table>
</table>
</script><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="49152"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="unknown" method="table" conf="3"/></port>
<port protocol="tcp" portid="49153"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="unknown" method="table" conf="3"/></port>
<port protocol="tcp" portid="49154"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="unknown" method="table" conf="3"/></port>
<port protocol="tcp" portid="49155"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="unknown" method="table" conf="3"/></port>
<port protocol="tcp" portid="49157"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="unknown" method="table" conf="3"/></port>
<port protocol="tcp" portid="49158"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="unknown" method="table" conf="3"/></port>
</ports>
<hostscript><script id="smb-vuln-ms10-054" output="false">false</script><script id="smb-vuln-ms10-061" output="NT_STATUS_ACCESS_DENIED">false</script></hostscript><times srtt="197" rttvar="26" to="100000"/>
</host>
<host starttime="1542271071" endtime="1542271878"><status state="up" reason="arp-response" reason_ttl="0"/>
<address addr="10.0.0.5" addrtype="ipv4"/>
<address addr="00:11:2F:B3:3A:75" addrtype="mac" vendor="Asustek Computer"/>
<hostnames>
</hostnames>
<ports><extraports state="closed" count="992">
<extrareasons reason="resets" count="992"/>
</extraports>
<port protocol="tcp" portid="25"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="smtp" method="table" conf="3"/><script id="smtp-vuln-cve2010-4344" output="&#xa;  The SMTP server is not Exim: NOT VULNERABLE&#xa;"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="80"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="http" method="table" conf="3"/><script id="http-csrf" output="&#xa;Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=10.0.0.5&#xa;  Found the following possible CSRF vulnerabilities: &#xa;    &#xa;    Path: http://10.0.0.5:80/&#xa;    Form id: form1&#xa;    Form action: /Default.aspx&#xa;    &#xa;    Path: http://10.0.0.5/Default.aspx&#xa;    Form id: form1&#xa;    Form action: /Default.aspx&#xa;"/><script id="http-dombased-xss" output="Couldn&apos;t find any DOM based XSS."/><script id="http-enum" output="&#xa;  /printers/: Potentially interesting folder (401 Access Denied)&#xa;"/><script id="http-stored-xss" output="Couldn&apos;t find any stored XSS vulnerabilities."/><script id="http-trace" output="TRACE is enabled"/></port>
<port protocol="tcp" portid="135"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="msrpc" method="table" conf="3"/></port>
<port protocol="tcp" portid="139"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="netbios-ssn" method="table" conf="3"/></port>
<port protocol="tcp" portid="443"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="https" method="table" conf="3"/><script id="http-aspnet-debug" output="ERROR: Script execution failed (use -d to debug)"/><script id="http-csrf" output="Couldn&apos;t find any CSRF vulnerabilities."/><script id="http-dombased-xss" output="Couldn&apos;t find any DOM based XSS."/><script id="http-stored-xss" output="Couldn&apos;t find any stored XSS vulnerabilities."/><script id="http-vuln-wnr1000-creds" output="ERROR: Script execution failed (use -d to debug)"/><script id="ssl-ccs-injection" output="No reply from server (TIMEOUT)"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="445"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="microsoft-ds" method="table" conf="3"/></port>
<port protocol="tcp" portid="1049"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="td-postman" method="table" conf="3"/></port>
<port protocol="tcp" portid="1433"><state state="open" reason="syn-ack" reason_ttl="128"/><service name="ms-sql-s" method="table" conf="3"/><script id="ssl-poodle" output="&#xa;  VULNERABLE:&#xa;  SSL POODLE information leak&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:113251  CVE:CVE-2014-3566&#xa;          The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;          products, uses nondeterministic CBC padding, which makes it easier&#xa;          for man-in-the-middle attackers to obtain cleartext data via a&#xa;          padding-oracle attack, aka the &quot;POODLE&quot; issue.&#xa;    Disclosure date: 2014-10-14&#xa;    Check results:&#xa;      TLS_RSA_WITH_3DES_EDE_CBC_SHA&#xa;    References:&#xa;      https://www.imperialviolet.org/2014/10/14/poodle.html&#xa;      http://osvdb.org/113251&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566&#xa;      https://www.openssl.org/~bodo/ssl-poodle.pdf&#xa;"><table key="CVE-2014-3566">
<elem key="title">SSL POODLE information leak</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:113251</elem>
<elem>CVE:CVE-2014-3566</elem>
</table>
<table key="description">
<elem>    The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;    products, uses nondeterministic CBC padding, which makes it easier&#xa;    for man-in-the-middle attackers to obtain cleartext data via a&#xa;    padding-oracle attack, aka the &quot;POODLE&quot; issue.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">10</elem>
<elem key="day">14</elem>
<elem key="year">2014</elem>
</table>
</table>
<elem key="disclosure">2014-10-14</elem>
<table key="check_results">
<elem>TLS_RSA_WITH_3DES_EDE_CBC_SHA</elem>
</table>
<table key="refs">
<elem>https://www.imperialviolet.org/2014/10/14/poodle.html</elem>
<elem>http://osvdb.org/113251</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</elem>
<elem>https://www.openssl.org/~bodo/ssl-poodle.pdf</elem>
</table>
</table>
</script><script id="sslv2-drown" output="&#xa;"></script></port>
</ports>
<hostscript><script id="samba-vuln-cve-2012-1182" output="NT_STATUS_ACCESS_DENIED">false</script><script id="smb-vuln-ms08-067" output="&#xa;  VULNERABLE:&#xa;  Microsoft Windows system vulnerable to remote code execution (MS08-067)&#xa;    State: VULNERABLE&#xa;    IDs:  CVE:CVE-2008-4250&#xa;          The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2,&#xa;          Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary&#xa;          code via a crafted RPC request that triggers the overflow during path canonicalization.&#xa;          &#xa;    Disclosure date: 2008-10-23&#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250&#xa;      https://technet.microsoft.com/en-us/library/security/ms08-067.aspx&#xa;"><table key="CVE-2008-4250">
<elem key="title">Microsoft Windows system vulnerable to remote code execution (MS08-067)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2008-4250</elem>
</table>
<table key="description">
<elem>    The Server service in Microsoft Windows 2000 SP4, XP SP2 and SP3, Server 2003 SP1 and SP2,&#xa;    Vista Gold and SP1, Server 2008, and 7 Pre-Beta allows remote attackers to execute arbitrary&#xa;    code via a crafted RPC request that triggers the overflow during path canonicalization.&#xa;    </elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">10</elem>
<elem key="day">23</elem>
<elem key="year">2008</elem>
</table>
</table>
<elem key="disclosure">2008-10-23</elem>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2008-4250</elem>
<elem>https://technet.microsoft.com/en-us/library/security/ms08-067.aspx</elem>
</table>
</table>
</script><script id="smb-vuln-ms10-054" output="false">false</script><script id="smb-vuln-ms10-061" output="ERROR: Script execution failed (use -d to debug)"/></hostscript><times srtt="172" rttvar="27" to="100000"/>
</host>
<host starttime="1542271071" endtime="1542271907"><status state="up" reason="arp-response" reason_ttl="0"/>
<address addr="10.0.0.9" addrtype="ipv4"/>
<address addr="04:DB:56:2F:CD:E4" addrtype="mac" vendor="Apple"/>
<hostnames>
</hostnames>
<ports><extraports state="closed" count="972">
<extrareasons reason="resets" count="972"/>
</extraports>
<port protocol="tcp" portid="22"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="ssh" method="table" conf="3"/></port>
<port protocol="tcp" portid="25"><state state="filtered" reason="no-response" reason_ttl="0"/><service name="smtp" method="table" conf="3"/></port>
<port protocol="tcp" portid="53"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="domain" method="table" conf="3"/></port>
<port protocol="tcp" portid="80"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="http" method="table" conf="3"/><script id="http-csrf" output="Couldn&apos;t find any CSRF vulnerabilities."/><script id="http-dombased-xss" output="Couldn&apos;t find any DOM based XSS."/><script id="http-slowloris-check" output="&#xa;  VULNERABLE:&#xa;  Slowloris DOS attack&#xa;    State: LIKELY VULNERABLE&#xa;    IDs:  CVE:CVE-2007-6750&#xa;      Slowloris tries to keep many connections to the target web server open and hold&#xa;      them open as long as possible.  It accomplishes this by opening connections to&#xa;      the target web server and sending a partial request. By doing so, it starves&#xa;      the http server&apos;s resources causing Denial Of Service.&#xa;      &#xa;    Disclosure date: 2009-09-17&#xa;    References:&#xa;      http://ha.ckers.org/slowloris/&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750&#xa;"><table key="CVE-2007-6750">
<elem key="title">Slowloris DOS attack</elem>
<elem key="state">LIKELY VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2007-6750</elem>
</table>
<table key="description">
<elem>Slowloris tries to keep many connections to the target web server open and hold&#xa;them open as long as possible.  It accomplishes this by opening connections to&#xa;the target web server and sending a partial request. By doing so, it starves&#xa;the http server&apos;s resources causing Denial Of Service.&#xa;</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">09</elem>
<elem key="day">17</elem>
<elem key="year">2009</elem>
</table>
</table>
<elem key="disclosure">2009-09-17</elem>
<table key="exploit_results">
</table>
<table key="refs">
<elem>http://ha.ckers.org/slowloris/</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</elem>
</table>
</table>
</script><script id="http-stored-xss" output="Couldn&apos;t find any stored XSS vulnerabilities."/><script id="http-vuln-cve2011-3192" output="&#xa;  VULNERABLE:&#xa;  Apache byterange filter DoS&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:74721  CVE:CVE-2011-3192&#xa;      The Apache web server is vulnerable to a denial of service attack when numerous&#xa;      overlapping byte ranges are requested.&#xa;    Disclosure date: 2011-08-19&#xa;    References:&#xa;      http://seclists.org/fulldisclosure/2011/Aug/175&#xa;      http://nessus.org/plugins/index.php?view=single&amp;id=55976&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192&#xa;      http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192&#xa;      http://osvdb.org/74721&#xa;"><table key="CVE-2011-3192">
<elem key="title">Apache byterange filter DoS</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:74721</elem>
<elem>CVE:CVE-2011-3192</elem>
</table>
<table key="description">
<elem>The Apache web server is vulnerable to a denial of service attack when numerous&#xa;overlapping byte ranges are requested.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">08</elem>
<elem key="day">19</elem>
<elem key="year">2011</elem>
</table>
</table>
<elem key="disclosure">2011-08-19</elem>
<table key="refs">
<elem>http://seclists.org/fulldisclosure/2011/Aug/175</elem>
<elem>http://nessus.org/plugins/index.php?view=single&amp;id=55976</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192</elem>
<elem>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192</elem>
<elem>http://osvdb.org/74721</elem>
</table>
</table>
</script></port>
<port protocol="tcp" portid="88"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="kerberos-sec" method="table" conf="3"/></port>
<port protocol="tcp" portid="106"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="pop3pw" method="table" conf="3"/></port>
<port protocol="tcp" portid="110"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="pop3" method="table" conf="3"/><script id="ssl-ccs-injection" output="&#xa;  VULNERABLE:&#xa;  SSL/TLS MITM vulnerability (CCS Injection)&#xa;    State: VULNERABLE&#xa;    Risk factor: High&#xa;      OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;      does not properly restrict processing of ChangeCipherSpec messages,&#xa;      which allows man-in-the-middle attackers to trigger use of a zero&#xa;      length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;      consequently hijack sessions or obtain sensitive information, via&#xa;      a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;          &#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224&#xa;      http://www.cvedetails.com/cve/2014-0224&#xa;      http://www.openssl.org/news/secadv_20140605.txt&#xa;"><table key="NMAP-18">
<elem key="title">SSL/TLS MITM vulnerability (CCS Injection)</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;does not properly restrict processing of ChangeCipherSpec messages,&#xa;which allows man-in-the-middle attackers to trigger use of a zero&#xa;length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;consequently hijack sessions or obtain sensitive information, via&#xa;a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</elem>
<elem>http://www.cvedetails.com/cve/2014-0224</elem>
<elem>http://www.openssl.org/news/secadv_20140605.txt</elem>
</table>
</table>
</script><script id="ssl-dh-params" output="&#xa;  VULNERABLE:&#xa;  Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:122331  CVE:CVE-2015-4000&#xa;      The Transport Layer Security (TLS) protocol contains a flaw that is&#xa;      triggered when handling Diffie-Hellman key exchanges defined with&#xa;      the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker&#xa;      to downgrade the security of a TLS session to 512-bit export-grade&#xa;      cryptography, which is significantly weaker, allowing the attacker&#xa;      to more easily break the encryption and monitor or tamper with&#xa;      the encrypted stream.&#xa;    Disclosure date: 2015-5-19&#xa;    Check results:&#xa;      EXPORT-GRADE DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: Unknown/Custom-generated&#xa;            Modulus Length: 512&#xa;            Generator Length: 8&#xa;            Public Key Length: 512&#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000&#xa;      http://osvdb.org/122331&#xa;      https://weakdh.org&#xa;  &#xa;  Diffie-Hellman Key Exchange Insufficient Group Strength&#xa;    State: VULNERABLE&#xa;      Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;      of insufficient strength, especially those using one of a few commonly&#xa;      shared groups, may be susceptible to passive eavesdropping attacks.&#xa;    Check results:&#xa;      WEAK DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: Unknown/Custom-generated&#xa;            Modulus Length: 1024&#xa;            Generator Length: 8&#xa;            Public Key Length: 1024&#xa;    References:&#xa;      https://weakdh.org&#xa;"><table key="CVE-2015-4000">
<elem key="title">Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:122331</elem>
<elem>CVE:CVE-2015-4000</elem>
</table>
<table key="description">
<elem>The Transport Layer Security (TLS) protocol contains a flaw that is&#xa;triggered when handling Diffie-Hellman key exchanges defined with&#xa;the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker&#xa;to downgrade the security of a TLS session to 512-bit export-grade&#xa;cryptography, which is significantly weaker, allowing the attacker&#xa;to more easily break the encryption and monitor or tamper with&#xa;the encrypted stream.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">5</elem>
<elem key="day">19</elem>
<elem key="year">2015</elem>
</table>
</table>
<elem key="disclosure">2015-5-19</elem>
<table key="check_results">
<elem>EXPORT-GRADE DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: Unknown/Custom-generated&#xa;      Modulus Length: 512&#xa;      Generator Length: 8&#xa;      Public Key Length: 512</elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</elem>
<elem>http://osvdb.org/122331</elem>
<elem>https://weakdh.org</elem>
</table>
</table>
<table key="NMAP-51">
<elem key="title">Diffie-Hellman Key Exchange Insufficient Group Strength</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;of insufficient strength, especially those using one of a few commonly&#xa;shared groups, may be susceptible to passive eavesdropping attacks.</elem>
</table>
<table key="check_results">
<elem>WEAK DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: Unknown/Custom-generated&#xa;      Modulus Length: 1024&#xa;      Generator Length: 8&#xa;      Public Key Length: 1024</elem>
</table>
<table key="refs">
<elem>https://weakdh.org</elem>
</table>
</table>
</script><script id="ssl-poodle" output="&#xa;  VULNERABLE:&#xa;  SSL POODLE information leak&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:113251  CVE:CVE-2014-3566&#xa;          The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;          products, uses nondeterministic CBC padding, which makes it easier&#xa;          for man-in-the-middle attackers to obtain cleartext data via a&#xa;          padding-oracle attack, aka the &quot;POODLE&quot; issue.&#xa;    Disclosure date: 2014-10-14&#xa;    Check results:&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA&#xa;    References:&#xa;      https://www.imperialviolet.org/2014/10/14/poodle.html&#xa;      http://osvdb.org/113251&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566&#xa;      https://www.openssl.org/~bodo/ssl-poodle.pdf&#xa;"><table key="CVE-2014-3566">
<elem key="title">SSL POODLE information leak</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:113251</elem>
<elem>CVE:CVE-2014-3566</elem>
</table>
<table key="description">
<elem>    The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;    products, uses nondeterministic CBC padding, which makes it easier&#xa;    for man-in-the-middle attackers to obtain cleartext data via a&#xa;    padding-oracle attack, aka the &quot;POODLE&quot; issue.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">10</elem>
<elem key="day">14</elem>
<elem key="year">2014</elem>
</table>
</table>
<elem key="disclosure">2014-10-14</elem>
<table key="check_results">
<elem>TLS_RSA_WITH_AES_128_CBC_SHA</elem>
</table>
<table key="refs">
<elem>https://www.imperialviolet.org/2014/10/14/poodle.html</elem>
<elem>http://osvdb.org/113251</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</elem>
<elem>https://www.openssl.org/~bodo/ssl-poodle.pdf</elem>
</table>
</table>
</script><script id="sslv2-drown" output="&#xa;  forced_ciphers: &#xa;    SSL2_DES_64_CBC_WITH_MD5&#xa;    SSL2_DES_192_EDE3_CBC_WITH_MD5&#xa;    SSL2_RC2_128_CBC_WITH_MD5&#xa;    SSL2_RC2_128_CBC_EXPORT40_WITH_MD5&#xa;    SSL2_RC4_128_WITH_MD5&#xa;    SSL2_RC4_128_EXPORT40_WITH_MD5&#xa;  vulns: &#xa;    CVE-2015-3197: &#xa;      title: OpenSSL: SSLv2 doesn&apos;t block disabled ciphers&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2015-3197&#xa;      description: &#xa;              ssl/s2_srvr.c in OpenSSL 1.0.1 before 1.0.1r and 1.0.2 before 1.0.2f does not&#xa;      prevent use of disabled ciphers, which makes it easier for man-in-the-middle&#xa;      attackers to defeat cryptographic protection mechanisms by performing computations&#xa;      on SSLv2 traffic, related to the get_client_master_key and get_client_hello&#xa;      functions.&#xa;    &#xa;      refs: &#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3197&#xa;        https://www.openssl.org/news/secadv/20160128.txt&#xa;    CVE-2016-0703: &#xa;      title: OpenSSL: Divide-and-conquer session key recovery in SSLv2&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2016-0703&#xa;      description: &#xa;              The get_client_master_key function in s2_srvr.c in the SSLv2 implementation in&#xa;      OpenSSL before 0.9.8zf, 1.0.0 before 1.0.0r, 1.0.1 before 1.0.1m, and 1.0.2 before&#xa;      1.0.2a accepts a nonzero CLIENT-MASTER-KEY CLEAR-KEY-LENGTH value for an arbitrary&#xa;      cipher, which allows man-in-the-middle attackers to determine the MASTER-KEY value&#xa;      and decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding oracle, a&#xa;      related issue to CVE-2016-0800.&#xa;    &#xa;      refs: &#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0703&#xa;        https://www.openssl.org/news/secadv/20160301.txt&#xa;    CVE-2016-0800: &#xa;      title: OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2016-0800&#xa;      description: &#xa;              The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and&#xa;      other products, requires a server to send a ServerVerify message before establishing&#xa;      that a client possesses certain plaintext RSA data, which makes it easier for remote&#xa;      attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding&#xa;      oracle, aka a &quot;DROWN&quot; attack.&#xa;    &#xa;      refs: &#xa;        https://www.openssl.org/news/secadv/20160301.txt&#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800"><table key="forced_ciphers">
<elem>SSL2_DES_64_CBC_WITH_MD5</elem>
<elem>SSL2_DES_192_EDE3_CBC_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</elem>
<elem>SSL2_RC4_128_WITH_MD5</elem>
<elem>SSL2_RC4_128_EXPORT40_WITH_MD5</elem>
</table>
<table key="vulns">
<table key="CVE-2015-3197">
<elem key="title">OpenSSL: SSLv2 doesn&apos;t block disabled ciphers</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2015-3197</elem>
</table>
<table key="description">
<elem>      ssl/s2_srvr.c in OpenSSL 1.0.1 before 1.0.1r and 1.0.2 before 1.0.2f does not&#xa;      prevent use of disabled ciphers, which makes it easier for man-in-the-middle&#xa;      attackers to defeat cryptographic protection mechanisms by performing computations&#xa;      on SSLv2 traffic, related to the get_client_master_key and get_client_hello&#xa;      functions.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3197</elem>
<elem>https://www.openssl.org/news/secadv/20160128.txt</elem>
</table>
</table>
<table key="CVE-2016-0703">
<elem key="title">OpenSSL: Divide-and-conquer session key recovery in SSLv2</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2016-0703</elem>
</table>
<table key="description">
<elem>      The get_client_master_key function in s2_srvr.c in the SSLv2 implementation in&#xa;      OpenSSL before 0.9.8zf, 1.0.0 before 1.0.0r, 1.0.1 before 1.0.1m, and 1.0.2 before&#xa;      1.0.2a accepts a nonzero CLIENT-MASTER-KEY CLEAR-KEY-LENGTH value for an arbitrary&#xa;      cipher, which allows man-in-the-middle attackers to determine the MASTER-KEY value&#xa;      and decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding oracle, a&#xa;      related issue to CVE-2016-0800.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0703</elem>
<elem>https://www.openssl.org/news/secadv/20160301.txt</elem>
</table>
</table>
<table key="CVE-2016-0800">
<elem key="title">OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2016-0800</elem>
</table>
<table key="description">
<elem>      The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and&#xa;      other products, requires a server to send a ServerVerify message before establishing&#xa;      that a client possesses certain plaintext RSA data, which makes it easier for remote&#xa;      attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding&#xa;      oracle, aka a &quot;DROWN&quot; attack.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://www.openssl.org/news/secadv/20160301.txt</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800</elem>
</table>
</table>
</table>
</script></port>
<port protocol="tcp" portid="139"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="netbios-ssn" method="table" conf="3"/></port>
<port protocol="tcp" portid="143"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="imap" method="table" conf="3"/><script id="ssl-ccs-injection" output="&#xa;  VULNERABLE:&#xa;  SSL/TLS MITM vulnerability (CCS Injection)&#xa;    State: VULNERABLE&#xa;    Risk factor: High&#xa;      OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;      does not properly restrict processing of ChangeCipherSpec messages,&#xa;      which allows man-in-the-middle attackers to trigger use of a zero&#xa;      length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;      consequently hijack sessions or obtain sensitive information, via&#xa;      a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;          &#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224&#xa;      http://www.cvedetails.com/cve/2014-0224&#xa;      http://www.openssl.org/news/secadv_20140605.txt&#xa;"><table key="NMAP-144">
<elem key="title">SSL/TLS MITM vulnerability (CCS Injection)</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;does not properly restrict processing of ChangeCipherSpec messages,&#xa;which allows man-in-the-middle attackers to trigger use of a zero&#xa;length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;consequently hijack sessions or obtain sensitive information, via&#xa;a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</elem>
<elem>http://www.cvedetails.com/cve/2014-0224</elem>
<elem>http://www.openssl.org/news/secadv_20140605.txt</elem>
</table>
</table>
</script><script id="ssl-dh-params" output="&#xa;  VULNERABLE:&#xa;  Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:122331  CVE:CVE-2015-4000&#xa;      The Transport Layer Security (TLS) protocol contains a flaw that is&#xa;      triggered when handling Diffie-Hellman key exchanges defined with&#xa;      the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker&#xa;      to downgrade the security of a TLS session to 512-bit export-grade&#xa;      cryptography, which is significantly weaker, allowing the attacker&#xa;      to more easily break the encryption and monitor or tamper with&#xa;      the encrypted stream.&#xa;    Disclosure date: 2015-5-19&#xa;    Check results:&#xa;      EXPORT-GRADE DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: Unknown/Custom-generated&#xa;            Modulus Length: 512&#xa;            Generator Length: 8&#xa;            Public Key Length: 512&#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000&#xa;      http://osvdb.org/122331&#xa;      https://weakdh.org&#xa;  &#xa;  Diffie-Hellman Key Exchange Insufficient Group Strength&#xa;    State: VULNERABLE&#xa;      Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;      of insufficient strength, especially those using one of a few commonly&#xa;      shared groups, may be susceptible to passive eavesdropping attacks.&#xa;    Check results:&#xa;      WEAK DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: Unknown/Custom-generated&#xa;            Modulus Length: 1024&#xa;            Generator Length: 8&#xa;            Public Key Length: 1024&#xa;    References:&#xa;      https://weakdh.org&#xa;"><table key="CVE-2015-4000">
<elem key="title">Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:122331</elem>
<elem>CVE:CVE-2015-4000</elem>
</table>
<table key="description">
<elem>The Transport Layer Security (TLS) protocol contains a flaw that is&#xa;triggered when handling Diffie-Hellman key exchanges defined with&#xa;the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker&#xa;to downgrade the security of a TLS session to 512-bit export-grade&#xa;cryptography, which is significantly weaker, allowing the attacker&#xa;to more easily break the encryption and monitor or tamper with&#xa;the encrypted stream.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">5</elem>
<elem key="day">19</elem>
<elem key="year">2015</elem>
</table>
</table>
<elem key="disclosure">2015-5-19</elem>
<table key="check_results">
<elem>EXPORT-GRADE DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: Unknown/Custom-generated&#xa;      Modulus Length: 512&#xa;      Generator Length: 8&#xa;      Public Key Length: 512</elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</elem>
<elem>http://osvdb.org/122331</elem>
<elem>https://weakdh.org</elem>
</table>
</table>
<table key="NMAP-116">
<elem key="title">Diffie-Hellman Key Exchange Insufficient Group Strength</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;of insufficient strength, especially those using one of a few commonly&#xa;shared groups, may be susceptible to passive eavesdropping attacks.</elem>
</table>
<table key="check_results">
<elem>WEAK DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: Unknown/Custom-generated&#xa;      Modulus Length: 1024&#xa;      Generator Length: 8&#xa;      Public Key Length: 1024</elem>
</table>
<table key="refs">
<elem>https://weakdh.org</elem>
</table>
</table>
</script><script id="ssl-poodle" output="&#xa;  VULNERABLE:&#xa;  SSL POODLE information leak&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:113251  CVE:CVE-2014-3566&#xa;          The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;          products, uses nondeterministic CBC padding, which makes it easier&#xa;          for man-in-the-middle attackers to obtain cleartext data via a&#xa;          padding-oracle attack, aka the &quot;POODLE&quot; issue.&#xa;    Disclosure date: 2014-10-14&#xa;    Check results:&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA&#xa;    References:&#xa;      https://www.imperialviolet.org/2014/10/14/poodle.html&#xa;      http://osvdb.org/113251&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566&#xa;      https://www.openssl.org/~bodo/ssl-poodle.pdf&#xa;"><table key="CVE-2014-3566">
<elem key="title">SSL POODLE information leak</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:113251</elem>
<elem>CVE:CVE-2014-3566</elem>
</table>
<table key="description">
<elem>    The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;    products, uses nondeterministic CBC padding, which makes it easier&#xa;    for man-in-the-middle attackers to obtain cleartext data via a&#xa;    padding-oracle attack, aka the &quot;POODLE&quot; issue.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">10</elem>
<elem key="day">14</elem>
<elem key="year">2014</elem>
</table>
</table>
<elem key="disclosure">2014-10-14</elem>
<table key="check_results">
<elem>TLS_RSA_WITH_AES_128_CBC_SHA</elem>
</table>
<table key="refs">
<elem>https://www.imperialviolet.org/2014/10/14/poodle.html</elem>
<elem>http://osvdb.org/113251</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</elem>
<elem>https://www.openssl.org/~bodo/ssl-poodle.pdf</elem>
</table>
</table>
</script><script id="sslv2-drown" output="&#xa;  forced_ciphers: &#xa;    SSL2_DES_64_CBC_WITH_MD5&#xa;    SSL2_DES_192_EDE3_CBC_WITH_MD5&#xa;    SSL2_RC2_128_CBC_WITH_MD5&#xa;    SSL2_RC2_128_CBC_EXPORT40_WITH_MD5&#xa;    SSL2_RC4_128_WITH_MD5&#xa;    SSL2_RC4_128_EXPORT40_WITH_MD5&#xa;  vulns: &#xa;    CVE-2015-3197: &#xa;      title: OpenSSL: SSLv2 doesn&apos;t block disabled ciphers&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2015-3197&#xa;      description: &#xa;              ssl/s2_srvr.c in OpenSSL 1.0.1 before 1.0.1r and 1.0.2 before 1.0.2f does not&#xa;      prevent use of disabled ciphers, which makes it easier for man-in-the-middle&#xa;      attackers to defeat cryptographic protection mechanisms by performing computations&#xa;      on SSLv2 traffic, related to the get_client_master_key and get_client_hello&#xa;      functions.&#xa;    &#xa;      refs: &#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3197&#xa;        https://www.openssl.org/news/secadv/20160128.txt&#xa;    CVE-2016-0703: &#xa;      title: OpenSSL: Divide-and-conquer session key recovery in SSLv2&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2016-0703&#xa;      description: &#xa;              The get_client_master_key function in s2_srvr.c in the SSLv2 implementation in&#xa;      OpenSSL before 0.9.8zf, 1.0.0 before 1.0.0r, 1.0.1 before 1.0.1m, and 1.0.2 before&#xa;      1.0.2a accepts a nonzero CLIENT-MASTER-KEY CLEAR-KEY-LENGTH value for an arbitrary&#xa;      cipher, which allows man-in-the-middle attackers to determine the MASTER-KEY value&#xa;      and decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding oracle, a&#xa;      related issue to CVE-2016-0800.&#xa;    &#xa;      refs: &#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0703&#xa;        https://www.openssl.org/news/secadv/20160301.txt&#xa;    CVE-2016-0800: &#xa;      title: OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2016-0800&#xa;      description: &#xa;              The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and&#xa;      other products, requires a server to send a ServerVerify message before establishing&#xa;      that a client possesses certain plaintext RSA data, which makes it easier for remote&#xa;      attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding&#xa;      oracle, aka a &quot;DROWN&quot; attack.&#xa;    &#xa;      refs: &#xa;        https://www.openssl.org/news/secadv/20160301.txt&#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800"><table key="forced_ciphers">
<elem>SSL2_DES_64_CBC_WITH_MD5</elem>
<elem>SSL2_DES_192_EDE3_CBC_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</elem>
<elem>SSL2_RC4_128_WITH_MD5</elem>
<elem>SSL2_RC4_128_EXPORT40_WITH_MD5</elem>
</table>
<table key="vulns">
<table key="CVE-2015-3197">
<elem key="title">OpenSSL: SSLv2 doesn&apos;t block disabled ciphers</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2015-3197</elem>
</table>
<table key="description">
<elem>      ssl/s2_srvr.c in OpenSSL 1.0.1 before 1.0.1r and 1.0.2 before 1.0.2f does not&#xa;      prevent use of disabled ciphers, which makes it easier for man-in-the-middle&#xa;      attackers to defeat cryptographic protection mechanisms by performing computations&#xa;      on SSLv2 traffic, related to the get_client_master_key and get_client_hello&#xa;      functions.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3197</elem>
<elem>https://www.openssl.org/news/secadv/20160128.txt</elem>
</table>
</table>
<table key="CVE-2016-0703">
<elem key="title">OpenSSL: Divide-and-conquer session key recovery in SSLv2</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2016-0703</elem>
</table>
<table key="description">
<elem>      The get_client_master_key function in s2_srvr.c in the SSLv2 implementation in&#xa;      OpenSSL before 0.9.8zf, 1.0.0 before 1.0.0r, 1.0.1 before 1.0.1m, and 1.0.2 before&#xa;      1.0.2a accepts a nonzero CLIENT-MASTER-KEY CLEAR-KEY-LENGTH value for an arbitrary&#xa;      cipher, which allows man-in-the-middle attackers to determine the MASTER-KEY value&#xa;      and decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding oracle, a&#xa;      related issue to CVE-2016-0800.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0703</elem>
<elem>https://www.openssl.org/news/secadv/20160301.txt</elem>
</table>
</table>
<table key="CVE-2016-0800">
<elem key="title">OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2016-0800</elem>
</table>
<table key="description">
<elem>      The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and&#xa;      other products, requires a server to send a ServerVerify message before establishing&#xa;      that a client possesses certain plaintext RSA data, which makes it easier for remote&#xa;      attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding&#xa;      oracle, aka a &quot;DROWN&quot; attack.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://www.openssl.org/news/secadv/20160301.txt</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800</elem>
</table>
</table>
</table>
</script></port>
<port protocol="tcp" portid="311"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="asip-webadmin" method="table" conf="3"/></port>
<port protocol="tcp" portid="389"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="ldap" method="table" conf="3"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="445"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="microsoft-ds" method="table" conf="3"/></port>
<port protocol="tcp" portid="548"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="afp" method="table" conf="3"/></port>
<port protocol="tcp" portid="587"><state state="filtered" reason="no-response" reason_ttl="0"/><service name="submission" method="table" conf="3"/></port>
<port protocol="tcp" portid="625"><state state="filtered" reason="no-response" reason_ttl="0"/><service name="apple-xsrvr-admin" method="table" conf="3"/></port>
<port protocol="tcp" portid="749"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="kerberos-adm" method="table" conf="3"/></port>
<port protocol="tcp" portid="993"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="imaps" method="table" conf="3"/><script id="ssl-ccs-injection" output="&#xa;  VULNERABLE:&#xa;  SSL/TLS MITM vulnerability (CCS Injection)&#xa;    State: VULNERABLE&#xa;    Risk factor: High&#xa;      OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;      does not properly restrict processing of ChangeCipherSpec messages,&#xa;      which allows man-in-the-middle attackers to trigger use of a zero&#xa;      length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;      consequently hijack sessions or obtain sensitive information, via&#xa;      a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;          &#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224&#xa;      http://www.cvedetails.com/cve/2014-0224&#xa;      http://www.openssl.org/news/secadv_20140605.txt&#xa;"><table key="NMAP-48">
<elem key="title">SSL/TLS MITM vulnerability (CCS Injection)</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;does not properly restrict processing of ChangeCipherSpec messages,&#xa;which allows man-in-the-middle attackers to trigger use of a zero&#xa;length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;consequently hijack sessions or obtain sensitive information, via&#xa;a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</elem>
<elem>http://www.cvedetails.com/cve/2014-0224</elem>
<elem>http://www.openssl.org/news/secadv_20140605.txt</elem>
</table>
</table>
</script><script id="ssl-dh-params" output="&#xa;  VULNERABLE:&#xa;  Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:122331  CVE:CVE-2015-4000&#xa;      The Transport Layer Security (TLS) protocol contains a flaw that is&#xa;      triggered when handling Diffie-Hellman key exchanges defined with&#xa;      the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker&#xa;      to downgrade the security of a TLS session to 512-bit export-grade&#xa;      cryptography, which is significantly weaker, allowing the attacker&#xa;      to more easily break the encryption and monitor or tamper with&#xa;      the encrypted stream.&#xa;    Disclosure date: 2015-5-19&#xa;    Check results:&#xa;      EXPORT-GRADE DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: Unknown/Custom-generated&#xa;            Modulus Length: 512&#xa;            Generator Length: 8&#xa;            Public Key Length: 512&#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000&#xa;      http://osvdb.org/122331&#xa;      https://weakdh.org&#xa;  &#xa;  Diffie-Hellman Key Exchange Insufficient Group Strength&#xa;    State: VULNERABLE&#xa;      Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;      of insufficient strength, especially those using one of a few commonly&#xa;      shared groups, may be susceptible to passive eavesdropping attacks.&#xa;    Check results:&#xa;      WEAK DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: Unknown/Custom-generated&#xa;            Modulus Length: 1024&#xa;            Generator Length: 8&#xa;            Public Key Length: 1024&#xa;    References:&#xa;      https://weakdh.org&#xa;"><table key="CVE-2015-4000">
<elem key="title">Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:122331</elem>
<elem>CVE:CVE-2015-4000</elem>
</table>
<table key="description">
<elem>The Transport Layer Security (TLS) protocol contains a flaw that is&#xa;triggered when handling Diffie-Hellman key exchanges defined with&#xa;the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker&#xa;to downgrade the security of a TLS session to 512-bit export-grade&#xa;cryptography, which is significantly weaker, allowing the attacker&#xa;to more easily break the encryption and monitor or tamper with&#xa;the encrypted stream.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">5</elem>
<elem key="day">19</elem>
<elem key="year">2015</elem>
</table>
</table>
<elem key="disclosure">2015-5-19</elem>
<table key="check_results">
<elem>EXPORT-GRADE DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: Unknown/Custom-generated&#xa;      Modulus Length: 512&#xa;      Generator Length: 8&#xa;      Public Key Length: 512</elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</elem>
<elem>http://osvdb.org/122331</elem>
<elem>https://weakdh.org</elem>
</table>
</table>
<table key="NMAP-41">
<elem key="title">Diffie-Hellman Key Exchange Insufficient Group Strength</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;of insufficient strength, especially those using one of a few commonly&#xa;shared groups, may be susceptible to passive eavesdropping attacks.</elem>
</table>
<table key="check_results">
<elem>WEAK DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: Unknown/Custom-generated&#xa;      Modulus Length: 1024&#xa;      Generator Length: 8&#xa;      Public Key Length: 1024</elem>
</table>
<table key="refs">
<elem>https://weakdh.org</elem>
</table>
</table>
</script><script id="ssl-poodle" output="&#xa;  VULNERABLE:&#xa;  SSL POODLE information leak&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:113251  CVE:CVE-2014-3566&#xa;          The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;          products, uses nondeterministic CBC padding, which makes it easier&#xa;          for man-in-the-middle attackers to obtain cleartext data via a&#xa;          padding-oracle attack, aka the &quot;POODLE&quot; issue.&#xa;    Disclosure date: 2014-10-14&#xa;    Check results:&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA&#xa;    References:&#xa;      https://www.imperialviolet.org/2014/10/14/poodle.html&#xa;      http://osvdb.org/113251&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566&#xa;      https://www.openssl.org/~bodo/ssl-poodle.pdf&#xa;"><table key="CVE-2014-3566">
<elem key="title">SSL POODLE information leak</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:113251</elem>
<elem>CVE:CVE-2014-3566</elem>
</table>
<table key="description">
<elem>    The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;    products, uses nondeterministic CBC padding, which makes it easier&#xa;    for man-in-the-middle attackers to obtain cleartext data via a&#xa;    padding-oracle attack, aka the &quot;POODLE&quot; issue.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">10</elem>
<elem key="day">14</elem>
<elem key="year">2014</elem>
</table>
</table>
<elem key="disclosure">2014-10-14</elem>
<table key="check_results">
<elem>TLS_RSA_WITH_AES_128_CBC_SHA</elem>
</table>
<table key="refs">
<elem>https://www.imperialviolet.org/2014/10/14/poodle.html</elem>
<elem>http://osvdb.org/113251</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</elem>
<elem>https://www.openssl.org/~bodo/ssl-poodle.pdf</elem>
</table>
</table>
</script><script id="sslv2-drown" output="&#xa;  forced_ciphers: &#xa;    SSL2_DES_64_CBC_WITH_MD5&#xa;    SSL2_DES_192_EDE3_CBC_WITH_MD5&#xa;    SSL2_RC2_128_CBC_WITH_MD5&#xa;    SSL2_RC2_128_CBC_EXPORT40_WITH_MD5&#xa;    SSL2_RC4_128_WITH_MD5&#xa;    SSL2_RC4_128_EXPORT40_WITH_MD5&#xa;  vulns: &#xa;    CVE-2015-3197: &#xa;      title: OpenSSL: SSLv2 doesn&apos;t block disabled ciphers&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2015-3197&#xa;      description: &#xa;              ssl/s2_srvr.c in OpenSSL 1.0.1 before 1.0.1r and 1.0.2 before 1.0.2f does not&#xa;      prevent use of disabled ciphers, which makes it easier for man-in-the-middle&#xa;      attackers to defeat cryptographic protection mechanisms by performing computations&#xa;      on SSLv2 traffic, related to the get_client_master_key and get_client_hello&#xa;      functions.&#xa;    &#xa;      refs: &#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3197&#xa;        https://www.openssl.org/news/secadv/20160128.txt&#xa;    CVE-2016-0703: &#xa;      title: OpenSSL: Divide-and-conquer session key recovery in SSLv2&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2016-0703&#xa;      description: &#xa;              The get_client_master_key function in s2_srvr.c in the SSLv2 implementation in&#xa;      OpenSSL before 0.9.8zf, 1.0.0 before 1.0.0r, 1.0.1 before 1.0.1m, and 1.0.2 before&#xa;      1.0.2a accepts a nonzero CLIENT-MASTER-KEY CLEAR-KEY-LENGTH value for an arbitrary&#xa;      cipher, which allows man-in-the-middle attackers to determine the MASTER-KEY value&#xa;      and decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding oracle, a&#xa;      related issue to CVE-2016-0800.&#xa;    &#xa;      refs: &#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0703&#xa;        https://www.openssl.org/news/secadv/20160301.txt&#xa;    CVE-2016-0800: &#xa;      title: OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2016-0800&#xa;      description: &#xa;              The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and&#xa;      other products, requires a server to send a ServerVerify message before establishing&#xa;      that a client possesses certain plaintext RSA data, which makes it easier for remote&#xa;      attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding&#xa;      oracle, aka a &quot;DROWN&quot; attack.&#xa;    &#xa;      refs: &#xa;        https://www.openssl.org/news/secadv/20160301.txt&#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800"><table key="forced_ciphers">
<elem>SSL2_DES_64_CBC_WITH_MD5</elem>
<elem>SSL2_DES_192_EDE3_CBC_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</elem>
<elem>SSL2_RC4_128_WITH_MD5</elem>
<elem>SSL2_RC4_128_EXPORT40_WITH_MD5</elem>
</table>
<table key="vulns">
<table key="CVE-2015-3197">
<elem key="title">OpenSSL: SSLv2 doesn&apos;t block disabled ciphers</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2015-3197</elem>
</table>
<table key="description">
<elem>      ssl/s2_srvr.c in OpenSSL 1.0.1 before 1.0.1r and 1.0.2 before 1.0.2f does not&#xa;      prevent use of disabled ciphers, which makes it easier for man-in-the-middle&#xa;      attackers to defeat cryptographic protection mechanisms by performing computations&#xa;      on SSLv2 traffic, related to the get_client_master_key and get_client_hello&#xa;      functions.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3197</elem>
<elem>https://www.openssl.org/news/secadv/20160128.txt</elem>
</table>
</table>
<table key="CVE-2016-0703">
<elem key="title">OpenSSL: Divide-and-conquer session key recovery in SSLv2</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2016-0703</elem>
</table>
<table key="description">
<elem>      The get_client_master_key function in s2_srvr.c in the SSLv2 implementation in&#xa;      OpenSSL before 0.9.8zf, 1.0.0 before 1.0.0r, 1.0.1 before 1.0.1m, and 1.0.2 before&#xa;      1.0.2a accepts a nonzero CLIENT-MASTER-KEY CLEAR-KEY-LENGTH value for an arbitrary&#xa;      cipher, which allows man-in-the-middle attackers to determine the MASTER-KEY value&#xa;      and decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding oracle, a&#xa;      related issue to CVE-2016-0800.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0703</elem>
<elem>https://www.openssl.org/news/secadv/20160301.txt</elem>
</table>
</table>
<table key="CVE-2016-0800">
<elem key="title">OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2016-0800</elem>
</table>
<table key="description">
<elem>      The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and&#xa;      other products, requires a server to send a ServerVerify message before establishing&#xa;      that a client possesses certain plaintext RSA data, which makes it easier for remote&#xa;      attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding&#xa;      oracle, aka a &quot;DROWN&quot; attack.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://www.openssl.org/news/secadv/20160301.txt</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800</elem>
</table>
</table>
</table>
</script></port>
<port protocol="tcp" portid="995"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="pop3s" method="table" conf="3"/><script id="ssl-ccs-injection" output="&#xa;  VULNERABLE:&#xa;  SSL/TLS MITM vulnerability (CCS Injection)&#xa;    State: VULNERABLE&#xa;    Risk factor: High&#xa;      OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;      does not properly restrict processing of ChangeCipherSpec messages,&#xa;      which allows man-in-the-middle attackers to trigger use of a zero&#xa;      length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;      consequently hijack sessions or obtain sensitive information, via&#xa;      a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;          &#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224&#xa;      http://www.cvedetails.com/cve/2014-0224&#xa;      http://www.openssl.org/news/secadv_20140605.txt&#xa;"><table key="NMAP-11">
<elem key="title">SSL/TLS MITM vulnerability (CCS Injection)</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;does not properly restrict processing of ChangeCipherSpec messages,&#xa;which allows man-in-the-middle attackers to trigger use of a zero&#xa;length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;consequently hijack sessions or obtain sensitive information, via&#xa;a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</elem>
<elem>http://www.cvedetails.com/cve/2014-0224</elem>
<elem>http://www.openssl.org/news/secadv_20140605.txt</elem>
</table>
</table>
</script><script id="ssl-dh-params" output="&#xa;  VULNERABLE:&#xa;  Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:122331  CVE:CVE-2015-4000&#xa;      The Transport Layer Security (TLS) protocol contains a flaw that is&#xa;      triggered when handling Diffie-Hellman key exchanges defined with&#xa;      the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker&#xa;      to downgrade the security of a TLS session to 512-bit export-grade&#xa;      cryptography, which is significantly weaker, allowing the attacker&#xa;      to more easily break the encryption and monitor or tamper with&#xa;      the encrypted stream.&#xa;    Disclosure date: 2015-5-19&#xa;    Check results:&#xa;      EXPORT-GRADE DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: Unknown/Custom-generated&#xa;            Modulus Length: 512&#xa;            Generator Length: 8&#xa;            Public Key Length: 512&#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000&#xa;      http://osvdb.org/122331&#xa;      https://weakdh.org&#xa;  &#xa;  Diffie-Hellman Key Exchange Insufficient Group Strength&#xa;    State: VULNERABLE&#xa;      Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;      of insufficient strength, especially those using one of a few commonly&#xa;      shared groups, may be susceptible to passive eavesdropping attacks.&#xa;    Check results:&#xa;      WEAK DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: Unknown/Custom-generated&#xa;            Modulus Length: 1024&#xa;            Generator Length: 8&#xa;            Public Key Length: 1024&#xa;    References:&#xa;      https://weakdh.org&#xa;"><table key="CVE-2015-4000">
<elem key="title">Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:122331</elem>
<elem>CVE:CVE-2015-4000</elem>
</table>
<table key="description">
<elem>The Transport Layer Security (TLS) protocol contains a flaw that is&#xa;triggered when handling Diffie-Hellman key exchanges defined with&#xa;the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker&#xa;to downgrade the security of a TLS session to 512-bit export-grade&#xa;cryptography, which is significantly weaker, allowing the attacker&#xa;to more easily break the encryption and monitor or tamper with&#xa;the encrypted stream.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">5</elem>
<elem key="day">19</elem>
<elem key="year">2015</elem>
</table>
</table>
<elem key="disclosure">2015-5-19</elem>
<table key="check_results">
<elem>EXPORT-GRADE DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: Unknown/Custom-generated&#xa;      Modulus Length: 512&#xa;      Generator Length: 8&#xa;      Public Key Length: 512</elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</elem>
<elem>http://osvdb.org/122331</elem>
<elem>https://weakdh.org</elem>
</table>
</table>
<table key="NMAP-113">
<elem key="title">Diffie-Hellman Key Exchange Insufficient Group Strength</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;of insufficient strength, especially those using one of a few commonly&#xa;shared groups, may be susceptible to passive eavesdropping attacks.</elem>
</table>
<table key="check_results">
<elem>WEAK DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: Unknown/Custom-generated&#xa;      Modulus Length: 1024&#xa;      Generator Length: 8&#xa;      Public Key Length: 1024</elem>
</table>
<table key="refs">
<elem>https://weakdh.org</elem>
</table>
</table>
</script><script id="ssl-poodle" output="&#xa;  VULNERABLE:&#xa;  SSL POODLE information leak&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:113251  CVE:CVE-2014-3566&#xa;          The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;          products, uses nondeterministic CBC padding, which makes it easier&#xa;          for man-in-the-middle attackers to obtain cleartext data via a&#xa;          padding-oracle attack, aka the &quot;POODLE&quot; issue.&#xa;    Disclosure date: 2014-10-14&#xa;    Check results:&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA&#xa;    References:&#xa;      https://www.imperialviolet.org/2014/10/14/poodle.html&#xa;      http://osvdb.org/113251&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566&#xa;      https://www.openssl.org/~bodo/ssl-poodle.pdf&#xa;"><table key="CVE-2014-3566">
<elem key="title">SSL POODLE information leak</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:113251</elem>
<elem>CVE:CVE-2014-3566</elem>
</table>
<table key="description">
<elem>    The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;    products, uses nondeterministic CBC padding, which makes it easier&#xa;    for man-in-the-middle attackers to obtain cleartext data via a&#xa;    padding-oracle attack, aka the &quot;POODLE&quot; issue.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">10</elem>
<elem key="day">14</elem>
<elem key="year">2014</elem>
</table>
</table>
<elem key="disclosure">2014-10-14</elem>
<table key="check_results">
<elem>TLS_RSA_WITH_AES_128_CBC_SHA</elem>
</table>
<table key="refs">
<elem>https://www.imperialviolet.org/2014/10/14/poodle.html</elem>
<elem>http://osvdb.org/113251</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</elem>
<elem>https://www.openssl.org/~bodo/ssl-poodle.pdf</elem>
</table>
</table>
</script><script id="sslv2-drown" output="&#xa;  forced_ciphers: &#xa;    SSL2_DES_64_CBC_WITH_MD5&#xa;    SSL2_DES_192_EDE3_CBC_WITH_MD5&#xa;    SSL2_RC2_128_CBC_WITH_MD5&#xa;    SSL2_RC2_128_CBC_EXPORT40_WITH_MD5&#xa;    SSL2_RC4_128_WITH_MD5&#xa;    SSL2_RC4_128_EXPORT40_WITH_MD5&#xa;  vulns: &#xa;    CVE-2015-3197: &#xa;      title: OpenSSL: SSLv2 doesn&apos;t block disabled ciphers&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2015-3197&#xa;      description: &#xa;              ssl/s2_srvr.c in OpenSSL 1.0.1 before 1.0.1r and 1.0.2 before 1.0.2f does not&#xa;      prevent use of disabled ciphers, which makes it easier for man-in-the-middle&#xa;      attackers to defeat cryptographic protection mechanisms by performing computations&#xa;      on SSLv2 traffic, related to the get_client_master_key and get_client_hello&#xa;      functions.&#xa;    &#xa;      refs: &#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3197&#xa;        https://www.openssl.org/news/secadv/20160128.txt&#xa;    CVE-2016-0703: &#xa;      title: OpenSSL: Divide-and-conquer session key recovery in SSLv2&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2016-0703&#xa;      description: &#xa;              The get_client_master_key function in s2_srvr.c in the SSLv2 implementation in&#xa;      OpenSSL before 0.9.8zf, 1.0.0 before 1.0.0r, 1.0.1 before 1.0.1m, and 1.0.2 before&#xa;      1.0.2a accepts a nonzero CLIENT-MASTER-KEY CLEAR-KEY-LENGTH value for an arbitrary&#xa;      cipher, which allows man-in-the-middle attackers to determine the MASTER-KEY value&#xa;      and decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding oracle, a&#xa;      related issue to CVE-2016-0800.&#xa;    &#xa;      refs: &#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0703&#xa;        https://www.openssl.org/news/secadv/20160301.txt&#xa;    CVE-2016-0800: &#xa;      title: OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2016-0800&#xa;      description: &#xa;              The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and&#xa;      other products, requires a server to send a ServerVerify message before establishing&#xa;      that a client possesses certain plaintext RSA data, which makes it easier for remote&#xa;      attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding&#xa;      oracle, aka a &quot;DROWN&quot; attack.&#xa;    &#xa;      refs: &#xa;        https://www.openssl.org/news/secadv/20160301.txt&#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800"><table key="forced_ciphers">
<elem>SSL2_DES_64_CBC_WITH_MD5</elem>
<elem>SSL2_DES_192_EDE3_CBC_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</elem>
<elem>SSL2_RC4_128_WITH_MD5</elem>
<elem>SSL2_RC4_128_EXPORT40_WITH_MD5</elem>
</table>
<table key="vulns">
<table key="CVE-2015-3197">
<elem key="title">OpenSSL: SSLv2 doesn&apos;t block disabled ciphers</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2015-3197</elem>
</table>
<table key="description">
<elem>      ssl/s2_srvr.c in OpenSSL 1.0.1 before 1.0.1r and 1.0.2 before 1.0.2f does not&#xa;      prevent use of disabled ciphers, which makes it easier for man-in-the-middle&#xa;      attackers to defeat cryptographic protection mechanisms by performing computations&#xa;      on SSLv2 traffic, related to the get_client_master_key and get_client_hello&#xa;      functions.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-3197</elem>
<elem>https://www.openssl.org/news/secadv/20160128.txt</elem>
</table>
</table>
<table key="CVE-2016-0703">
<elem key="title">OpenSSL: Divide-and-conquer session key recovery in SSLv2</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2016-0703</elem>
</table>
<table key="description">
<elem>      The get_client_master_key function in s2_srvr.c in the SSLv2 implementation in&#xa;      OpenSSL before 0.9.8zf, 1.0.0 before 1.0.0r, 1.0.1 before 1.0.1m, and 1.0.2 before&#xa;      1.0.2a accepts a nonzero CLIENT-MASTER-KEY CLEAR-KEY-LENGTH value for an arbitrary&#xa;      cipher, which allows man-in-the-middle attackers to determine the MASTER-KEY value&#xa;      and decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding oracle, a&#xa;      related issue to CVE-2016-0800.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0703</elem>
<elem>https://www.openssl.org/news/secadv/20160301.txt</elem>
</table>
</table>
<table key="CVE-2016-0800">
<elem key="title">OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2016-0800</elem>
</table>
<table key="description">
<elem>      The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and&#xa;      other products, requires a server to send a ServerVerify message before establishing&#xa;      that a client possesses certain plaintext RSA data, which makes it easier for remote&#xa;      attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding&#xa;      oracle, aka a &quot;DROWN&quot; attack.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://www.openssl.org/news/secadv/20160301.txt</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800</elem>
</table>
</table>
</table>
</script></port>
<port protocol="tcp" portid="2000"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="cisco-sccp" method="table" conf="3"/></port>
<port protocol="tcp" portid="3659"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="apple-sasl" method="table" conf="3"/></port>
<port protocol="tcp" portid="5222"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="xmpp-client" method="table" conf="3"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="5269"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="xmpp-server" method="table" conf="3"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="5900"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="vnc" method="table" conf="3"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="7777"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="cbt" method="table" conf="3"/></port>
<port protocol="tcp" portid="8008"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="http" method="table" conf="3"/><script id="http-aspnet-debug" output="ERROR: Script execution failed (use -d to debug)"/><script id="http-csrf" output="Couldn&apos;t find any CSRF vulnerabilities."/><script id="http-dombased-xss" output="Couldn&apos;t find any DOM based XSS."/><script id="http-stored-xss" output="Couldn&apos;t find any stored XSS vulnerabilities."/><script id="http-vuln-wnr1000-creds" output="ERROR: Script execution failed (use -d to debug)"/></port>
<port protocol="tcp" portid="8086"><state state="filtered" reason="no-response" reason_ttl="0"/><service name="d-s-n" method="table" conf="3"/></port>
<port protocol="tcp" portid="8087"><state state="filtered" reason="no-response" reason_ttl="0"/><service name="simplifymedia" method="table" conf="3"/></port>
<port protocol="tcp" portid="8800"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="sunwebadmin" method="table" conf="3"/></port>
</ports>
<hostscript><script id="samba-vuln-cve-2012-1182" output="SMB: Failed to receive bytes after 5 attempts: TIMEOUT">false</script><script id="smb-vuln-ms10-054" output="false">false</script><script id="smb-vuln-ms10-061" output="SMB: Failed to receive bytes after 5 attempts: TIMEOUT">false</script></hostscript><times srtt="144" rttvar="19" to="100000"/>
</host>
<host starttime="1542271071" endtime="1542271797"><status state="up" reason="arp-response" reason_ttl="0"/>
<address addr="10.0.0.11" addrtype="ipv4"/>
<address addr="00:11:22:33:44:55" addrtype="mac" vendor="Cimsys"/>
<hostnames>
</hostnames>
<ports><extraports state="closed" count="988">
<extrareasons reason="resets" count="988"/>
</extraports>
<port protocol="tcp" portid="21"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="ftp" method="table" conf="3"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="22"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="ssh" method="table" conf="3"/></port>
<port protocol="tcp" portid="23"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="telnet" method="table" conf="3"/></port>
<port protocol="tcp" portid="53"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="domain" method="table" conf="3"/></port>
<port protocol="tcp" portid="80"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="http" method="table" conf="3"/><script id="http-csrf" output="Couldn&apos;t find any CSRF vulnerabilities."/><script id="http-dombased-xss" output="Couldn&apos;t find any DOM based XSS."/><script id="http-enum" output="&#xa;  /phpinfo.php: Possible information file&#xa;  /icons/: Potentially interesting folder w/ directory listing&#xa;"/><script id="http-slowloris-check" output="&#xa;  VULNERABLE:&#xa;  Slowloris DOS attack&#xa;    State: LIKELY VULNERABLE&#xa;    IDs:  CVE:CVE-2007-6750&#xa;      Slowloris tries to keep many connections to the target web server open and hold&#xa;      them open as long as possible.  It accomplishes this by opening connections to&#xa;      the target web server and sending a partial request. By doing so, it starves&#xa;      the http server&apos;s resources causing Denial Of Service.&#xa;      &#xa;    Disclosure date: 2009-09-17&#xa;    References:&#xa;      http://ha.ckers.org/slowloris/&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750&#xa;"><table key="CVE-2007-6750">
<elem key="title">Slowloris DOS attack</elem>
<elem key="state">LIKELY VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2007-6750</elem>
</table>
<table key="description">
<elem>Slowloris tries to keep many connections to the target web server open and hold&#xa;them open as long as possible.  It accomplishes this by opening connections to&#xa;the target web server and sending a partial request. By doing so, it starves&#xa;the http server&apos;s resources causing Denial Of Service.&#xa;</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">09</elem>
<elem key="day">17</elem>
<elem key="year">2009</elem>
</table>
</table>
<elem key="disclosure">2009-09-17</elem>
<table key="exploit_results">
</table>
<table key="refs">
<elem>http://ha.ckers.org/slowloris/</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</elem>
</table>
</table>
</script><script id="http-stored-xss" output="Couldn&apos;t find any stored XSS vulnerabilities."/><script id="http-trace" output="TRACE is enabled"/><script id="http-vuln-cve2011-3192" output="&#xa;  VULNERABLE:&#xa;  Apache byterange filter DoS&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:74721  CVE:CVE-2011-3192&#xa;      The Apache web server is vulnerable to a denial of service attack when numerous&#xa;      overlapping byte ranges are requested.&#xa;    Disclosure date: 2011-08-19&#xa;    References:&#xa;      http://seclists.org/fulldisclosure/2011/Aug/175&#xa;      http://nessus.org/plugins/index.php?view=single&amp;id=55976&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192&#xa;      http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192&#xa;      http://osvdb.org/74721&#xa;"><table key="CVE-2011-3192">
<elem key="title">Apache byterange filter DoS</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:74721</elem>
<elem>CVE:CVE-2011-3192</elem>
</table>
<table key="description">
<elem>The Apache web server is vulnerable to a denial of service attack when numerous&#xa;overlapping byte ranges are requested.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">08</elem>
<elem key="day">19</elem>
<elem key="year">2011</elem>
</table>
</table>
<elem key="disclosure">2011-08-19</elem>
<table key="refs">
<elem>http://seclists.org/fulldisclosure/2011/Aug/175</elem>
<elem>http://nessus.org/plugins/index.php?view=single&amp;id=55976</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192</elem>
<elem>http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2011-3192</elem>
<elem>http://osvdb.org/74721</elem>
</table>
</table>
</script></port>
<port protocol="tcp" portid="139"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="netbios-ssn" method="table" conf="3"/></port>
<port protocol="tcp" portid="443"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="https" method="table" conf="3"/><script id="http-aspnet-debug" output="ERROR: Script execution failed (use -d to debug)"/><script id="http-csrf" output="Couldn&apos;t find any CSRF vulnerabilities."/><script id="http-dombased-xss" output="Couldn&apos;t find any DOM based XSS."/><script id="http-stored-xss" output="Couldn&apos;t find any stored XSS vulnerabilities."/><script id="http-vuln-wnr1000-creds" output="ERROR: Script execution failed (use -d to debug)"/><script id="ssl-ccs-injection" output="&#xa;  VULNERABLE:&#xa;  SSL/TLS MITM vulnerability (CCS Injection)&#xa;    State: VULNERABLE&#xa;    Risk factor: High&#xa;      OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;      does not properly restrict processing of ChangeCipherSpec messages,&#xa;      which allows man-in-the-middle attackers to trigger use of a zero&#xa;      length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;      consequently hijack sessions or obtain sensitive information, via&#xa;      a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;          &#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224&#xa;      http://www.cvedetails.com/cve/2014-0224&#xa;      http://www.openssl.org/news/secadv_20140605.txt&#xa;"><table key="NMAP-129">
<elem key="title">SSL/TLS MITM vulnerability (CCS Injection)</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;does not properly restrict processing of ChangeCipherSpec messages,&#xa;which allows man-in-the-middle attackers to trigger use of a zero&#xa;length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;consequently hijack sessions or obtain sensitive information, via&#xa;a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</elem>
<elem>http://www.cvedetails.com/cve/2014-0224</elem>
<elem>http://www.openssl.org/news/secadv_20140605.txt</elem>
</table>
</table>
</script><script id="ssl-poodle" output="&#xa;  VULNERABLE:&#xa;  SSL POODLE information leak&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:113251  CVE:CVE-2014-3566&#xa;          The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;          products, uses nondeterministic CBC padding, which makes it easier&#xa;          for man-in-the-middle attackers to obtain cleartext data via a&#xa;          padding-oracle attack, aka the &quot;POODLE&quot; issue.&#xa;    Disclosure date: 2014-10-14&#xa;    Check results:&#xa;      TLS_RSA_WITH_3DES_EDE_CBC_SHA&#xa;    References:&#xa;      https://www.imperialviolet.org/2014/10/14/poodle.html&#xa;      http://osvdb.org/113251&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566&#xa;      https://www.openssl.org/~bodo/ssl-poodle.pdf&#xa;"><table key="CVE-2014-3566">
<elem key="title">SSL POODLE information leak</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:113251</elem>
<elem>CVE:CVE-2014-3566</elem>
</table>
<table key="description">
<elem>    The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;    products, uses nondeterministic CBC padding, which makes it easier&#xa;    for man-in-the-middle attackers to obtain cleartext data via a&#xa;    padding-oracle attack, aka the &quot;POODLE&quot; issue.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">10</elem>
<elem key="day">14</elem>
<elem key="year">2014</elem>
</table>
</table>
<elem key="disclosure">2014-10-14</elem>
<table key="check_results">
<elem>TLS_RSA_WITH_3DES_EDE_CBC_SHA</elem>
</table>
<table key="refs">
<elem>https://www.imperialviolet.org/2014/10/14/poodle.html</elem>
<elem>http://osvdb.org/113251</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</elem>
<elem>https://www.openssl.org/~bodo/ssl-poodle.pdf</elem>
</table>
</table>
</script><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="445"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="microsoft-ds" method="table" conf="3"/></port>
<port protocol="tcp" portid="3306"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="mysql" method="table" conf="3"/></port>
<port protocol="tcp" portid="5432"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="postgresql" method="table" conf="3"/><script id="ssl-ccs-injection" output="&#xa;  VULNERABLE:&#xa;  SSL/TLS MITM vulnerability (CCS Injection)&#xa;    State: VULNERABLE&#xa;    Risk factor: High&#xa;      OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;      does not properly restrict processing of ChangeCipherSpec messages,&#xa;      which allows man-in-the-middle attackers to trigger use of a zero&#xa;      length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;      consequently hijack sessions or obtain sensitive information, via&#xa;      a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;          &#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224&#xa;      http://www.cvedetails.com/cve/2014-0224&#xa;      http://www.openssl.org/news/secadv_20140605.txt&#xa;"><table key="NMAP-65">
<elem key="title">SSL/TLS MITM vulnerability (CCS Injection)</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;does not properly restrict processing of ChangeCipherSpec messages,&#xa;which allows man-in-the-middle attackers to trigger use of a zero&#xa;length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;consequently hijack sessions or obtain sensitive information, via&#xa;a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</elem>
<elem>http://www.cvedetails.com/cve/2014-0224</elem>
<elem>http://www.openssl.org/news/secadv_20140605.txt</elem>
</table>
</table>
</script><script id="ssl-dh-params" output="&#xa;  VULNERABLE:&#xa;  Diffie-Hellman Key Exchange Insufficient Group Strength&#xa;    State: VULNERABLE&#xa;      Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;      of insufficient strength, especially those using one of a few commonly&#xa;      shared groups, may be susceptible to passive eavesdropping attacks.&#xa;    Check results:&#xa;      WEAK DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: Unknown/Custom-generated&#xa;            Modulus Length: 1024&#xa;            Generator Length: 8&#xa;            Public Key Length: 1024&#xa;    References:&#xa;      https://weakdh.org&#xa;"><table key="NMAP-76">
<elem key="title">Diffie-Hellman Key Exchange Insufficient Group Strength</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;of insufficient strength, especially those using one of a few commonly&#xa;shared groups, may be susceptible to passive eavesdropping attacks.</elem>
</table>
<table key="check_results">
<elem>WEAK DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: Unknown/Custom-generated&#xa;      Modulus Length: 1024&#xa;      Generator Length: 8&#xa;      Public Key Length: 1024</elem>
</table>
<table key="refs">
<elem>https://weakdh.org</elem>
</table>
</table>
</script><script id="ssl-poodle" output="&#xa;  VULNERABLE:&#xa;  SSL POODLE information leak&#xa;    State: VULNERABLE&#xa;    IDs:  OSVDB:113251  CVE:CVE-2014-3566&#xa;          The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;          products, uses nondeterministic CBC padding, which makes it easier&#xa;          for man-in-the-middle attackers to obtain cleartext data via a&#xa;          padding-oracle attack, aka the &quot;POODLE&quot; issue.&#xa;    Disclosure date: 2014-10-14&#xa;    Check results:&#xa;      TLS_RSA_WITH_AES_128_CBC_SHA&#xa;    References:&#xa;      https://www.imperialviolet.org/2014/10/14/poodle.html&#xa;      http://osvdb.org/113251&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566&#xa;      https://www.openssl.org/~bodo/ssl-poodle.pdf&#xa;"><table key="CVE-2014-3566">
<elem key="title">SSL POODLE information leak</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>OSVDB:113251</elem>
<elem>CVE:CVE-2014-3566</elem>
</table>
<table key="description">
<elem>    The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;    products, uses nondeterministic CBC padding, which makes it easier&#xa;    for man-in-the-middle attackers to obtain cleartext data via a&#xa;    padding-oracle attack, aka the &quot;POODLE&quot; issue.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">10</elem>
<elem key="day">14</elem>
<elem key="year">2014</elem>
</table>
</table>
<elem key="disclosure">2014-10-14</elem>
<table key="check_results">
<elem>TLS_RSA_WITH_AES_128_CBC_SHA</elem>
</table>
<table key="refs">
<elem>https://www.imperialviolet.org/2014/10/14/poodle.html</elem>
<elem>http://osvdb.org/113251</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</elem>
<elem>https://www.openssl.org/~bodo/ssl-poodle.pdf</elem>
</table>
</table>
</script><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="8009"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="ajp13" method="table" conf="3"/></port>
<port protocol="tcp" portid="8180"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="unknown" method="table" conf="3"/><script id="http-enum" output="&#xa;  /admin/: Possible admin folder&#xa;  /admin/index.html: Possible admin folder&#xa;  /admin/login.html: Possible admin folder&#xa;  /admin/admin.html: Possible admin folder&#xa;  /admin/account.html: Possible admin folder&#xa;  /admin/admin_login.html: Possible admin folder&#xa;  /admin/home.html: Possible admin folder&#xa;  /admin/admin-login.html: Possible admin folder&#xa;  /admin/adminLogin.html: Possible admin folder&#xa;  /admin/controlpanel.html: Possible admin folder&#xa;  /admin/cp.html: Possible admin folder&#xa;  /admin/index.jsp: Possible admin folder&#xa;  /admin/login.jsp: Possible admin folder&#xa;  /admin/admin.jsp: Possible admin folder&#xa;  /admin/home.jsp: Possible admin folder&#xa;  /admin/controlpanel.jsp: Possible admin folder&#xa;  /admin/admin-login.jsp: Possible admin folder&#xa;  /admin/cp.jsp: Possible admin folder&#xa;  /admin/account.jsp: Possible admin folder&#xa;  /admin/admin_login.jsp: Possible admin folder&#xa;  /admin/adminLogin.jsp: Possible admin folder&#xa;  /manager/html/upload: Apache Tomcat (401 Unauthorized)&#xa;  /manager/html: Apache Tomcat (401 Unauthorized)&#xa;  /admin/view/javascript/fckeditor/editor/filemanager/connectors/test.html: OpenCart/FCKeditor File upload&#xa;  /admin/includes/FCKeditor/editor/filemanager/upload/test.html: ASP Simple Blog / FCKeditor File Upload&#xa;  /admin/jscript/upload.html: Lizard Cart/Remote File upload&#xa;  /webdav/: Potentially interesting folder&#xa;"/><script id="http-slowloris-check" output="&#xa;  VULNERABLE:&#xa;  Slowloris DOS attack&#xa;    State: LIKELY VULNERABLE&#xa;    IDs:  CVE:CVE-2007-6750&#xa;      Slowloris tries to keep many connections to the target web server open and hold&#xa;      them open as long as possible.  It accomplishes this by opening connections to&#xa;      the target web server and sending a partial request. By doing so, it starves&#xa;      the http server&apos;s resources causing Denial Of Service.&#xa;      &#xa;    Disclosure date: 2009-09-17&#xa;    References:&#xa;      http://ha.ckers.org/slowloris/&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750&#xa;"><table key="CVE-2007-6750">
<elem key="title">Slowloris DOS attack</elem>
<elem key="state">LIKELY VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2007-6750</elem>
</table>
<table key="description">
<elem>Slowloris tries to keep many connections to the target web server open and hold&#xa;them open as long as possible.  It accomplishes this by opening connections to&#xa;the target web server and sending a partial request. By doing so, it starves&#xa;the http server&apos;s resources causing Denial Of Service.&#xa;</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="month">09</elem>
<elem key="day">17</elem>
<elem key="year">2009</elem>
</table>
</table>
<elem key="disclosure">2009-09-17</elem>
<table key="exploit_results">
</table>
<table key="refs">
<elem>http://ha.ckers.org/slowloris/</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2007-6750</elem>
</table>
</table>
</script></port>
</ports>
<hostscript><script id="smb-vuln-ms10-054" output="false">false</script><script id="smb-vuln-ms10-061" output="false">false</script></hostscript><times srtt="184" rttvar="19" to="100000"/>
</host>
<host starttime="1542271071" endtime="1542271582"><status state="up" reason="arp-response" reason_ttl="0"/>
<address addr="10.0.0.12" addrtype="ipv4"/>
<address addr="00:11:32:A4:24:0D" addrtype="mac" vendor="Synology Incorporated"/>
<hostnames>
</hostnames>
<ports><extraports state="closed" count="995">
<extrareasons reason="resets" count="995"/>
</extraports>
<port protocol="tcp" portid="22"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="ssh" method="table" conf="3"/></port>
<port protocol="tcp" portid="25"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="smtp" method="table" conf="3"/><script id="smtp-vuln-cve2010-4344" output="&#xa;  The SMTP server is not Exim: NOT VULNERABLE&#xa;"/><script id="ssl-dh-params" output="&#xa;  VULNERABLE:&#xa;  Anonymous Diffie-Hellman Key Exchange MitM Vulnerability&#xa;    State: VULNERABLE&#xa;      Transport Layer Security (TLS) services that use anonymous&#xa;      Diffie-Hellman key exchange only provide protection against passive&#xa;      eavesdropping, and are vulnerable to active man-in-the-middle attacks&#xa;      which could completely compromise the confidentiality and integrity&#xa;      of any data exchanged over the resulting session.&#xa;    Check results:&#xa;      ANONYMOUS DH GROUP 1&#xa;            Cipher Suite: TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: postfix builtin&#xa;            Modulus Length: 1024&#xa;            Generator Length: 8&#xa;            Public Key Length: 1024&#xa;    References:&#xa;      https://www.ietf.org/rfc/rfc2246.txt&#xa;  &#xa;  Diffie-Hellman Key Exchange Insufficient Group Strength&#xa;    State: VULNERABLE&#xa;      Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;      of insufficient strength, especially those using one of a few commonly&#xa;      shared groups, may be susceptible to passive eavesdropping attacks.&#xa;    Check results:&#xa;      WEAK DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: postfix builtin&#xa;            Modulus Length: 1024&#xa;            Generator Length: 8&#xa;            Public Key Length: 1024&#xa;    References:&#xa;      https://weakdh.org&#xa;"><table key="NMAP-89">
<elem key="title">Anonymous Diffie-Hellman Key Exchange MitM Vulnerability</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>Transport Layer Security (TLS) services that use anonymous&#xa;Diffie-Hellman key exchange only provide protection against passive&#xa;eavesdropping, and are vulnerable to active man-in-the-middle attacks&#xa;which could completely compromise the confidentiality and integrity&#xa;of any data exchanged over the resulting session.</elem>
</table>
<table key="check_results">
<elem>ANONYMOUS DH GROUP 1&#xa;      Cipher Suite: TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: postfix builtin&#xa;      Modulus Length: 1024&#xa;      Generator Length: 8&#xa;      Public Key Length: 1024</elem>
</table>
<table key="refs">
<elem>https://www.ietf.org/rfc/rfc2246.txt</elem>
</table>
</table>
<table key="NMAP-90">
<elem key="title">Diffie-Hellman Key Exchange Insufficient Group Strength</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;of insufficient strength, especially those using one of a few commonly&#xa;shared groups, may be susceptible to passive eavesdropping attacks.</elem>
</table>
<table key="check_results">
<elem>WEAK DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: postfix builtin&#xa;      Modulus Length: 1024&#xa;      Generator Length: 8&#xa;      Public Key Length: 1024</elem>
</table>
<table key="refs">
<elem>https://weakdh.org</elem>
</table>
</table>
</script><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="80"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="http" method="table" conf="3"/><script id="http-csrf" output="&#xa;Spidering limited to: maxdepth=3; maxpagecount=20; withinhost=10.0.0.12&#xa;  Found the following possible CSRF vulnerabilities: &#xa;    &#xa;    Path: http://10.0.0.12:80/&#xa;    Form id: &#xa;    Form action: redirect.php&#xa;"/><script id="http-dombased-xss" output="Couldn&apos;t find any DOM based XSS."/><script id="http-enum" output="&#xa;  /phpmyadmin/: phpMyAdmin&#xa;  /src/login.php: squirrelmail version 1.4.23 [svn]&#xa;"/><script id="http-stored-xss" output="Couldn&apos;t find any stored XSS vulnerabilities."/></port>
<port protocol="tcp" portid="110"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="pop3" method="table" conf="3"/><script id="sslv2-drown" output="&#xa;"></script></port>
<port protocol="tcp" portid="143"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="imap" method="table" conf="3"/><script id="sslv2-drown" output="&#xa;"></script></port>
</ports>
<times srtt="180" rttvar="27" to="100000"/>
</host>
<host starttime="1542271071" endtime="1542271472"><status state="up" reason="arp-response" reason_ttl="0"/>
<address addr="10.0.0.15" addrtype="ipv4"/>
<address addr="84:38:38:62:D1:BB" addrtype="mac" vendor="Samsung Electro-mechanics(thailand)"/>
<hostnames>
</hostnames>
<ports><extraports state="closed" count="999">
<extrareasons reason="resets" count="999"/>
</extraports>
<port protocol="tcp" portid="5555"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="freeciv" method="table" conf="3"/></port>
</ports>
<times srtt="245" rttvar="16" to="100000"/>
</host>
<host starttime="1542271071" endtime="1542271585"><status state="up" reason="arp-response" reason_ttl="0"/>
<address addr="10.0.0.17" addrtype="ipv4"/>
<address addr="00:1C:06:12:31:F5" addrtype="mac" vendor="Siemens Numerical Control, Nanjing"/>
<hostnames>
</hostnames>
<ports><extraports state="closed" count="997">
<extrareasons reason="resets" count="997"/>
</extraports>
<port protocol="tcp" portid="22"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="ssh" method="table" conf="3"/></port>
<port protocol="tcp" portid="23"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="telnet" method="table" conf="3"/></port>
<port protocol="tcp" portid="80"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="http" method="table" conf="3"/><script id="http-csrf" output="Couldn&apos;t find any CSRF vulnerabilities."/><script id="http-dombased-xss" output="Couldn&apos;t find any DOM based XSS."/><script id="http-stored-xss" output="Couldn&apos;t find any stored XSS vulnerabilities."/></port>
</ports>
<times srtt="184" rttvar="38" to="100000"/>
</host>
<host starttime="1542271071" endtime="1542271573"><status state="up" reason="arp-response" reason_ttl="0"/>
<address addr="10.0.0.99" addrtype="ipv4"/>
<address addr="D4:CA:6D:26:44:BD" addrtype="mac" vendor="Routerboard.com"/>
<hostnames>
</hostnames>
<ports><extraports state="filtered" count="998">
<extrareasons reason="no-responses" count="998"/>
</extraports>
<port protocol="tcp" portid="53"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="domain" method="table" conf="3"/></port>
<port protocol="tcp" portid="80"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="http" method="table" conf="3"/><script id="http-csrf" output="Couldn&apos;t find any CSRF vulnerabilities."/><script id="http-dombased-xss" output="Couldn&apos;t find any DOM based XSS."/><script id="http-enum" output="&#xa;  /tree/: Potentially interesting folder&#xa;"/><script id="http-fileupload-exploiter" output="&#xa;  &#xa;    Couldn&apos;t find a file-type field.&#xa;  &#xa;    Couldn&apos;t find a file-type field.&#xa;  &#xa;    Couldn&apos;t find a file-type field.&#xa;  &#xa;    Couldn&apos;t find a file-type field."><table>
<elem>Couldn&apos;t find a file-type field.</elem>
</table>
<table>
<elem>Couldn&apos;t find a file-type field.</elem>
</table>
<table>
<elem>Couldn&apos;t find a file-type field.</elem>
</table>
<table>
<elem>Couldn&apos;t find a file-type field.</elem>
</table>
</script><script id="http-stored-xss" output="Couldn&apos;t find any stored XSS vulnerabilities."/></port>
</ports>
<times srtt="261" rttvar="9" to="100000"/>
</host>
<runstats><finished time="1542271907" timestr="Thu Nov 15 09:51:47 2018" elapsed="846.82" summary="Nmap done at Thu Nov 15 09:51:47 2018; 8 IP addresses (8 hosts up) scanned in 846.82 seconds" exit="success"/><hosts up="8" down="0" total="8"/>
</runstats>
</nmaprun>
